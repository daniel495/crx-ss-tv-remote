@charset "utf-8";

html, body {
	margin: 0;
	border: 0;
	padding: 0;
	width: 100%;
	height: 100%;
}
form, p, div, section {
	display: block;
	margin: 0;
	padding: 0;
}
html {
	/* https://stackoverflow.com/questions/27804315/ */
	/* border-radius: 8px; */
	/* background: transparent; */

	background: linear-gradient(to bottom, #202020, #505050);
	color: white;

	font-family: "Droid Sans", "Ubuntu", "Helvetica", "Arial", sans-serif;
}

#close_button,
#options_button {
	display: block;
	position: fixed;
	/* 5px is the "resizable" clickable area. */
	top: 5px;

	margin: 0;
	border: 0;
	padding: 0;
	background: transparent;

	width: 1em;
	height: 1em;
	font-size: 12px;
	line-height: 1em;
	z-index: 10;
	-webkit-app-region: no-drag;
}
#close_button {
	right: 5px;
}
#options_button {
	right: calc(5px + 12px);
}
#close_button > svg,
#options_button > svg {
	display: block;
	width: 100%;
	height: 100%;
}
#close_button > svg {
	stroke: hsl(0, 0%, 50%);
	transition: stroke 0.25s;
}
#close_button:hover > svg,
#close_button:active > svg {
	stroke: hsl(0, 0%, 100%);
}
#options_button > svg {
	fill: hsl(0, 0%, 50%);
	transition: fill 0.25s;
}
#options_button:hover > svg,
#options_button:active > svg {
	fill: hsl(0, 0%, 100%);
}

#status_container {
	position: fixed;
	top: 5px;
	right: calc(5px + 2 * 12px);
	min-width: 1em;
	min-height: 1em;
	font-size: 12px;
	line-height: 1em;
	z-index: 10;
	-webkit-app-region: no-drag;
}
#status_container #status_icon {
	display: block;
	position: absolute;
	top: 0;
	right: 0;
	width: 1em;
	height: 1em;
	margin: 0;
	padding: 0;
	line-height: 1em;
	z-index: -1;
}
#status_container #status_label {
	display: none;

	overflow-wrap: break-word;

	text-align: left;
	line-height: 1em;
	/* Explanation of this formula:
	 * + viewport
	 * - this element margin-right
	 * - this elment horizontal padding
	 * - #status_container right position
	 * - 5px of margin to the left
	 **/
	max-width: calc(100vw - 1em - 2 * 1ex - (5px + 2 * 12px) - 5px);
	margin: 0;
	margin-top: 5px;
	margin-right: 1em;
	padding: 1ex;
	box-shadow: black 0 0 5px 0px;
	background: white;
	color: black;
}
#status_container:hover #status_label {
	display: block;
}

#status_container.gray #status_icon circle {
	fill: hsl(0, 0%, 50%);
}
#status_container.yellow #status_icon circle {
	fill: hsl(60, 100%, 50%);
}
#status_container.green #status_icon circle {
	fill: hsl(120, 100%, 50%);
}
#status_container.red #status_icon circle {
	fill: hsl(0, 100%, 50%);
}

#layout_container {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 0;
}


.tvremotebutton {
	border: 0;
	border-radius: 5px;
	color: black;
	background: linear-gradient(to bottom, hsl(207, 25%, 87%), hsl(207, 25%, 75%));
	box-shadow:
		rgba(  0,  0,  0,0.5)  0px  1px 2px 2px,
		rgba(  0,  0,  0,0.5) -1px -3px 3px 0px inset,
		rgba(255,255,255,0.5)  1px  3px 3px 0px inset;
}
.tvremotebutton:active {
	box-shadow:
		/* An extra outline has been added. */
		rgba(  0,  0,  0,0.5)  0px  1px 2px 1px inset,
		/* The others are copied from non-:active rule. */
		rgba(  0,  0,  0,0.5)  0px  1px 2px 2px,
		rgba(  0,  0,  0,0.5) -1px -3px 3px 0px inset,
		rgba(255,255,255,0.5)  1px  3px 3px 0px inset;
}
.dont_highlight_focused .tvremotebutton {
	outline: none;
}
.tvremotebutton.color-white {
	color: black;
	background: linear-gradient(to bottom, hsl(230, 0%, 90%), hsl(230, 0%, 75%));
}
.tvremotebutton.color-slateblue {
	color: black;
	background: linear-gradient(to bottom, hsl(230, 50%, 63%), hsl(230, 50%, 75%));
}
.tvremotebutton.color-black {
	color: white;
	background: linear-gradient(to bottom, hsl(0, 0%, 25%), hsl(0, 0%, 13%));
}
.tvremotebutton.color-red {
	color: white;
	background: linear-gradient(to bottom, hsl(0, 50%, 46%), hsl(0, 50%, 33%));
}
.tvremotebutton.color-green {
	color: white;
	background: linear-gradient(to bottom, hsl(135, 50%, 46%), hsl(135, 50%, 33%));
}
.tvremotebutton.color-yellow {
	color: white;
	background: linear-gradient(to bottom, hsl(45, 75%, 46%), hsl(45, 75%, 33%));
}
.tvremotebutton.color-cyan {
	color: white;
	background: linear-gradient(to bottom, hsl(240, 50%, 46%), hsl(240, 50%, 33%));
}
.tvremotebutton.color-rec {
	color: hsl(0, 100%, 50%);
}

.tvremotebutton.text-large {
	font-size: 1.75em !important;
}


#layout_container .tvremote.grid {
	width: 100%;
	height: 100%;
	padding: 2vmin;
	box-sizing: border-box;
	-webkit-app-region: drag;
}
#layout_container .tvremote.grid .cell {
	padding: 0;
	margin: 2vmin;
}
#layout_container .tvremote.grid button.cell {
	font: inherit;  /* Overriding the default button font and size. */
	line-height: 1em;
	overflow-wrap: break-word;
	-webkit-app-region: no-drag;
}


/* -- Grid layout using flex. -- */

.grid {
	display: flex;
	flex-direction: column;
}
.grid >     .row,
.grid > * > .row {
	flex: 1 1;

	display: flex;
	flex-direction: row;
}
.grid >     .row >     .cell,
.grid > * > .row >     .cell,
.grid >     .row > * > .cell,
.grid > * > .row > * > .cell {
	flex: 1 1;

	display: block;
}



/* Styles used while taking screenshots for the icon. (i.e. a lot of ugly hacks!) */
/* win = chrome.app.window.get('tvremotewindow'); win.innerBounds.width = win.innerBounds.height = 48; // Or 16, or 96 */
/*
button {
	-webkit-font-smoothing: antialiased !important;
	-webkit-transform: translateZ(0px);
}
html, body {
	font-family: "Arial", sans-serif;
}
#status_container, #close_button, #options_button {
	display: none;
}
@media (max-width: 48px) {
	.tvremotebutton {
		border-radius: 3px;
		box-shadow:
			rgba(  0,  0,  0,0.5)  0px  1px 2px 2px,
			rgba(  0,  0,  0,0.5) -1px -2px 3px 0px inset,
			rgba(255,255,255,0.5)  1px  2px 3px 0px inset;
	}
}
@media (max-width: 24px) {
	.row {
		font-size: 38vmin;
	}
	.tvremotebutton {
		line-height: 0 !important;
		border-radius: 2px;
		box-shadow:
			rgba(  0,  0,  0,0.5)  0px  1px 2px 2px,
			rgba(  0,  0,  0,0.5) -0.5px -1px 2px 0px inset,
			rgba(255,255,255,0.5)  0.5px  1px 2px 0px inset;
	}
	.grid > .row:not(:last-child),
	.grid > .row > .cell:not(:first-child) {
		display: none;
	}
}
*/
